** СОЗДАНИЕ СВОЕЙ ВЕТКИ **
1. `git checkout -b имя–ветки` - создать новую ветки с именем имя–ветки и переход в нее одновременно
2. `git status` - проверить, в какой ты ветке (появится сообщение on branch имя–ветки)
3. `git push -u origin имя–ветки` – опубликовать новую ветку в удалённом репозитории. Или в VS Code переходишь в Source Control, там должна появиться кнопка Publish branch. Нажимаешь и ветка появится в репозитории.

** ПОДТЯНУТЬ ИЗМЕНЕНИЯ ИЗ ГЛАВНОЙ ВЕТКИ ** 
1. `git status` – перед работой надо проверить гит статусом `git status` в какой ты ветке. 
2. `git checkout main` – переходишь в ветку main
3. `git pull` – скачиваешь актуальную версию ветки main (подтягиваешь изменения)
4. `git checkout имя–ветки` – перешла в свою ветку
5. `git merge main` – подтянула в свою ветку изменения из main
6. Если появится сообщение о конфликтах, то решаешь конфликты и потом добавляешь файл, в котором разрешила конфликты, в отслеживаемые (stage).
7. Работаешь в своей ветке. Пока ты в ней, все запушенные коммиты будут сохраняться в ней и не попадут в main.
8. Когда задача решена, отправляем пул реквест

** ОТПРАВИТЬ ПУЛ РЕКВЕСТ ** 
Чтобы запушить в main, нужно отправить `pull request` (ПР), можно через github –> там выбрать ветку, в которую сделать ПР. 
Внимательно проверь, из какой ветки в какую ты делаешь ПР!

** НАПИШИ В ЧАТ, ЧТО ОТПРАВИЛА ПР ** 