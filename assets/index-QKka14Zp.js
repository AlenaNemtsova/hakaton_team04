(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const o of t.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function n(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function r(e){if(e.ep)return;e.ep=!0;const t=n(e);fetch(e.href,t)}})();function v(){const c=[{name:"paris",url:"https://images.pexels.com/photos/3052361/pexels-photo-3052361.jpeg",alt:"Eiffel Tower in Paris"},{name:"newyork",url:"https://images.pexels.com/photos/802024/pexels-photo-802024.jpeg",alt:"New York City skyline"},{name:"tokyo",url:"https://images.pexels.com/photos/2506923/pexels-photo-2506923.jpeg",alt:"Tokyo cityscape with Mt. Fuji"},{name:"rome",url:"https://images.pexels.com/photos/532263/pexels-photo-532263.jpeg",alt:"Roman Colosseum"}],s=document.createElement("div");s.className="city-selector",c.forEach((e,t)=>{const o=document.createElement("div");o.className=`city-dot ${t===0?"active":""}`,o.dataset.city=e.name,s.appendChild(o),o.addEventListener("click",()=>{r(e),document.querySelectorAll(".city-dot").forEach(a=>a.classList.remove("active")),o.classList.add("active")})}),document.querySelector(".hero__image").appendChild(s);let n=0;function r(e){const t=document.querySelector(".current-city");t.src=e.url,t.alt=e.alt,t.dataset.city=e.name}setInterval(()=>{n=(n+1)%c.length,r(c[n]),document.querySelectorAll(".city-dot").forEach((e,t)=>{e.classList.toggle("active",t===n)})},3e3)}function w(){const s=atob("c2stcHJvai1DMG1BMmdILWFHVWlFYmZWSUQ2a0FWdWUtOWI0dEZMVmQ0WjhVeWZiZ050RWZEck4yMk9Db1VyemZUM3A3TEdkYnVfTzZqdDl3aVQzQmxia0ZKNWVWZkNDR191R3FpZzhMLVR0a3JuRTNBMHB5U2NpOGd2QndPRnA2ZE9RN0s0NkViemkwVzZBOXV0YjJkcWpuQ3BVcFkwSzJSMEE=");async function n(t,o){var u,g,h,m;const a=`В городе ${t} подбери по одному интересному месту для каждой из категорий: ${o.join(", ")}. Верни только JSON-массив, как пример:
  [
    {
      "category": "музеи",
      "name": "Музей современного искусства",
      "description": "...",
      "rating": 4.7,
      "image": "https://..."
    },
  ]`,l=await fetch("https://api.openai.com/v1/chat/completions",{method:"POST",headers:{Authorization:`Bearer ${s}`,"Content-Type":"application/json"},body:JSON.stringify({model:"gpt-4o",messages:[{role:"user",content:a}],temperature:.7})});if(!l.ok){const d=await l.text();throw new Error(`Ошибка API: ${l.status} — ${d}`)}const p=(m=(h=(g=(u=(await l.json()).choices)==null?void 0:u[0])==null?void 0:g.message)==null?void 0:h.content)==null?void 0:m.trim();function f(d){const y=d.match(/\[.*\]/s);return y?y[0]:null}console.log("Ответ AI:",p);try{const d=f(p);if(!d)throw new Error("JSON-массив не найден");return JSON.parse(d)}catch{return console.error("Не удалось распарсить JSON:",p),[]}}const r=document.querySelector(".route-selector__form"),e=document.getElementById("js-results");r.addEventListener("submit",async t=>{t.preventDefault();const o=r.city.value.trim(),a=[...r.querySelectorAll("input[name='interests']:checked")].map(l=>l.value);if(!o||a.length===0){e.innerHTML="<p>Пожалуйста, укажите город и хотя бы один интерес.</p>";return}e.innerHTML="<p>Ищем интересные места для маршрута...</p>";try{const l=await n(o,a);e.innerHTML=l.map(i=>`
          <div class="place-card">
            <img src="${i.image}" alt="${i.name}" class="place-card__image"/>
            <div class="place-card__info">
              <h3>${i.name} (${i.category})</h3>
              <p>${i.description}</p>
              <p><strong>Рейтинг:</strong> ${i.rating} / 5</p>
            </div>
          </div>
        `).join("")}catch(l){console.error(l),e.innerHTML="<p>Произошла ошибка при подборе маршрута. Попробуйте ещё раз.</p>"}})}function E(){return new Promise((c,s)=>{const n=document.getElementById("js-city");if("geolocation"in navigator)navigator.geolocation.getCurrentPosition(r,e);else{const t="Геолокация не поддерживается";n&&(n.textContent=t),s(new Error(t))}function r(t){const o=t.coords.latitude,a=t.coords.longitude;fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${o}&lon=${a}&accept-language=ru`).then(l=>l.json()).then(l=>{const i=l.address,p=i.city||i.town||i.village||"Город не найден";n&&(n.textContent=p),c({lat:o,lon:a,city:p})}).catch(()=>{n&&(n.textContent="Ошибка при определении города"),s(new Error("Ошибка при определении города"))})}function e(t){const o=`Ошибка при получении геолокации: ${t.message}`;n&&(n.textContent=o),s(new Error(o))}})}async function $(c,s){const e=`https://ru.wikipedia.org/w/api.php?action=query&list=geosearch&gscoord=${c}%7C${s}&gsradius=10000&gslimit=10&format=json&origin=*`,a=(await(await fetch(e)).json()).query.geosearch;return await Promise.all(a.map(async i=>{var u;const f=`https://ru.wikipedia.org/w/api.php?action=query&titles=${encodeURIComponent(i.title)}&prop=pageimages&format=json&pithumbsize=400&origin=*`;try{const h=await(await fetch(f)).json(),m=Object.values(h.query.pages)[0],d=((u=m==null?void 0:m.thumbnail)==null?void 0:u.source)||null;return{title:i.title,pageid:i.pageid,image:d}}catch{return{title:i.title,pageid:i.pageid,image:null}}}))}function L(c){const s=document.querySelector(".top-places__list");if(s.innerHTML="",!c.length){s.innerHTML='<div class="top-places__item">Ничего не найдено</div>';return}c.slice(0,3).forEach(r=>{const e=r.title,t=`https://ru.wikipedia.org/?curid=${r.pageid}`,o=r.image||"./src/assets/placeholder.jpg",a=document.createElement("div");a.classList.add("top-places__item"),a.innerHTML=`
            <div class="top-places__image-placeholder">
                <img src="${o}" alt="${e}" />
            </div>
            <div class="top-places__caption">
                <a href="${t}" target="_blank" rel="noopener noreferrer">${e}</a>
            </div>
        `,s.appendChild(a)})}async function _(){try{const{lat:c,lon:s,city:n}=await E();console.log();const r=document.getElementById("js-top-places-title");r&&n&&(r.textContent=`Топовые места в регионе: ${n}`);const e=await $(c,s);L(e)}catch(c){console.error("Ошибка:",c),document.querySelector(".top-places__list").innerHTML='<div class="top-places__item">Не удалось загрузить места</div>'}}document.addEventListener("DOMContentLoaded",()=>{v(),_(),w()});
